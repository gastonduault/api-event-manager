name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened

jobs:
  backend:
    name: backend pipeline
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: build docker images
        run: |
          docker compose -f docker-compose.yml build
          docker tag api-event-manager-api ${{ secrets.DOCKER_USERNAME }}/api-event-manager-api:latest
          docker tag api-event-manager-api ${{ secrets.DOCKER_USERNAME }}/api-event-manager-api:${{ github.run_number }}
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

      - name: start docker containers
        run: docker compose -f docker-compose.yml up -d
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

      - name: push docker images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/api-event-manager-api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/api-event-manager-api:${{ github.run_number }}

      - name: shutdown docker containers
        run: docker compose -f docker-compose.yml down --volumes
